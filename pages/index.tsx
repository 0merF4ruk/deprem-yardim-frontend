import Drawer from "@/components/UI/Drawer/Drawer";
import FooterBanner from "@/components/UI/FooterBanner/FooterBanner";
import { Data, MarkerData } from "@/mocks/types";
import styles from "@/styles/Home.module.css";
import Container from "@mui/material/Container";
import dynamic from "next/dynamic";
import Head from "next/head";
import Image from "next/image";
import { KeyboardEvent, MouseEvent, useCallback, useState } from "react";

interface HomeProps {
  results: MarkerData[];
}

const LeafletMap = dynamic(() => import("@/components/UI/Map"), {
  ssr: false,
});

export default function Home({ results }: HomeProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [drawerData, setDrawerData] = useState<any>();

  const toggleDrawer = useCallback(
    () => (event: KeyboardEvent | MouseEvent, markerData?: MarkerData) => {
      if (
        event.type === "keydown" &&
        ((event as KeyboardEvent).key === "Tab" ||
          (event as KeyboardEvent).key === "Shift")
      )
        return;

      setIsOpen((prev) => !prev);

      if (markerData) {
        setDrawerData(markerData);
      }
    },
    []
  );

  return (
    <>
      <Head>
        <title>Afet Haritası | Anasayfa</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo.svg" />
      </Head>

      <main className={styles.main}>
        <div className={styles.logo}>
          <Image src="/logo.svg" width={64} height="64" alt="Afet Haritası" />
        </div>

        <Container maxWidth={false} disableGutters>
          {/* @ts-expect-error */}
          <LeafletMap onClickMarker={toggleDrawer()} data={results} />
        </Container>
        <Drawer data={drawerData} isOpen={isOpen} toggler={toggleDrawer()} />
        <FooterBanner />
      </main>
    </>
  );
}

export async function getServerSideProps() {
  // Server-side requests are mocked by `mocks/server.ts`.
  const res = await fetch(
    "https://public-sdc.trendyol.com/discovery-web-websfxgeolocation-santral/geocode?address=gaziantep"
  );
  const data = (await res.json()) as Data;
  const results = data.results;

  return {
    props: {
      results,
    },
  };
}
