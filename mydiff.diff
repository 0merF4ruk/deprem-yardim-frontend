diff --git a/.env.development b/.env.development
index 629e10c..a39d395 100644
--- a/.env.development
+++ b/.env.development
@@ -1 +1 @@
-NEXT_PUBLIC_API_MOCKING=enabled
+NEXT_PUBLIC_API_MOCKING=disabled
diff --git a/components/UI/Common/LoadingSpinner.module.css b/components/UI/Common/LoadingSpinner.module.css
index 1914a5c..465678d 100644
--- a/components/UI/Common/LoadingSpinner.module.css
+++ b/components/UI/Common/LoadingSpinner.module.css
@@ -16,6 +16,7 @@
   display: flex;
   flex-direction: column;
   justify-content: center;
+  text-align: center;
   align-items: center;
   background-color: rgba(15, 15, 15, 0.5);
   border-radius: 5px;
@@ -50,6 +51,7 @@
   padding-top: 10px;
   color: lightgrey;
   font-family: "Lato", sans-serif;
+  white-space: pre-wrap;
   font-size: 18px;
   animation-name: fading;
   animation-duration: 1500ms;
diff --git a/components/UI/Common/LoadingSpinner.tsx b/components/UI/Common/LoadingSpinner.tsx
index a9aab2e..4c3be8a 100644
--- a/components/UI/Common/LoadingSpinner.tsx
+++ b/components/UI/Common/LoadingSpinner.tsx
@@ -1,12 +1,21 @@
 import React from "react";
+import { CircularProgress } from "@mui/material";
 import styles from "./LoadingSpinner.module.css";
 
-const RenderLoadingSpinner = () => {
+type LoadingProps = {
+  slowLoading: boolean;
+};
+
+const RenderLoadingSpinner = ({ slowLoading }: LoadingProps) => {
   return (
     <div className={styles.spinnerWrapper}>
       <div className={styles.spinnerLoaderBox}>
         <div className={styles.spinnerLoader}></div>
-        <div className={styles.spinnerLoaderText}>Y端kleniyor...</div>
+        <div className={styles.spinnerLoaderText}>
+          {slowLoading
+            ? "L端tfen Bekleyin,\nHala Y端kleniyor..."
+            : "Y端kleniyor..."}
+        </div>
       </div>
     </div>
   );
diff --git a/pages/index.tsx b/pages/index.tsx
index 820bb33..b414bfc 100644
--- a/pages/index.tsx
+++ b/pages/index.tsx
@@ -11,10 +11,11 @@ import styles from "@/styles/Home.module.css";
 import { BASE_URL } from "@/utils/constants";
 import Container from "@mui/material/Container";
 import dynamic from "next/dynamic";
-import useSWR from "swr";
+import useSWR, { useSWRConfig } from "swr";
 import Head from "@/components/UI/Head/Head";
 // import { Partytown } from "@builder.io/partytown/react";
 import Footer from "@/components/UI/Footer/Footer";
+import React, { useState } from "react";
 
 const LeafletMap = dynamic(() => import("@/components/UI/Map"), {
   ssr: false,
@@ -25,10 +26,13 @@ type Props = {
 };
 
 export default function Home({ deviceType }: Props) {
+  const [slowLoading, setSlowLoading] = useState(false);
   const { error, isLoading } = useSWR<MarkerData[] | undefined>(
     BASE_URL,
-    dataFetcher
+    dataFetcher,
+    { onLoadingSlow: () => setSlowLoading(true) }
   );
+
   const { setDevice } = useMapActions();
   setDevice(deviceType);
 
@@ -41,7 +45,7 @@ export default function Home({ deviceType }: Props) {
           <RenderIf condition={!error} fallback={<TechnicalError />}>
             <LeafletMap />
           </RenderIf>
-          {isLoading && <LoadingSpinner />}
+          {isLoading && <LoadingSpinner slowLoading={slowLoading} />}
         </Container>
         <Drawer />
         <ClusterPopup />
